apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "srv-devices.fullname" . }}
  labels:
    {{- include "srv-devices.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "srv-devices.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "srv-devices.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "srv-devices.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.environment }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "{{ .ASPNETCORE_ENVIRONMENT }}"
            - name: DB_HOST
              value: "{{ .DB_HOST }}"
            - name: DB_PORT
              value: "{{ .DB_PORT }}"
            - name: DB_NAME
              value: "{{ .DB_NAME }}"
            - name: DB_USER
              value: "{{ .DB_USER }}"
            - name: DB_PASSWORD
              value: "{{ .DB_PASSWORD }}"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .KAFKA_HOST }}"
          {{- end }}
{{/*            - name: DB_USER*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: db-secret*/}}
{{/*                  key: postgres-user*/}}
{{/*            - name: DB_PASSWORD*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: db-secret*/}}
{{/*                  key: postgres-password*/}}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

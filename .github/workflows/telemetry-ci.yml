name: srv-telemetry-ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOTNET_VERSION: '8.0'
  DOCKER_IMAGE_NAME: ghcr.io/synaxintelligence/srv-telemetry
  DOCKER_IMAGE_TAG: latest
  CONTEXT_DIR: SmartHome.Telemetry
  CHART_NAME: srv-telemetry
  CHART_VERSION: 1.0.0  

jobs:
  # Stage 1: Build
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout source code
        uses: actions/checkout@v3
      -
        name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      -
        name: Install dependencies
        run: dotnet restore
      -
        name: Build the application
        run: dotnet build --configuration Release --no-restore
      -
        name: Run tests
        run: dotnet test --configuration Release --no-restore --verbosity normal
  
  # Stage 2: Docker
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Checkout source code
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT_DIR }}
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          
  # Stage 3: Helm
  helm:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      -
        name: Checkout source code
        uses: actions/checkout@v3        
      -
        name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.1
      -
        name: Build Helm dependencies
        run: helm dependency update charts/${{ env.CHART_NAME }}
      -
        name: Lint Helm Chart
        run: helm lint charts/${{ env.CHART_NAME }}
      -
        name: Package Helm chart
        run: |
          helm package charts/${{ env.CHART_NAME }} --version ${{ env.CHART_VERSION }}
      -
        name: Login to CR
        uses: docker/login-action@v2
        with:
          registry: cr.yandex
          username: oauth
          password: ${{ secrets.YC_OAUTH }}
      -
        name: Push Helm chart to Yandex Container Registry
        run: |
          helm push ${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz oci://cr.yandex/${{ secrets.YC_REGISTRY_ID }}/charts